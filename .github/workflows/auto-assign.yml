name: Auto Assign Issues

on:
  issues:
    types: [labeled]

jobs:
  auto-assign:
    if: github.event.label.name == 'assign'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read assignees list
        id: assignees
        run: |
          USERS=$(yq e '.users | @csv' .github/workflows/configurations/assignees.yml | tr -d '"')
          echo "users=$USERS" >> $GITHUB_OUTPUT

      - name: Assign issue to next user
        uses: actions/github-script@v7
        id: assign
        with:
          script: |
            const users = '${{ steps.assignees.outputs.users }}'.split(',');
            // Fetch recent issues (last 20)
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'all',
              per_page: 20,
              sort: 'created',
              direction: 'desc',
            });
            // Collect recent assignees
            const recentAssignees = issues.map(i => i.assignee ? i.assignee.login : null).filter(Boolean);
            // Find the first user in the list not recently assigned
            let selected = users.find(u => !recentAssignees.includes(u));
            if (!selected) selected = users[0]; // fallback
            await github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              assignees: [selected],
            });
            core.setOutput('assigned', selected);

      - name: Remove 'assign' label
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'assign'
            });
